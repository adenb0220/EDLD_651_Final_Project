---
title: "EDLD 651 Final Project"
format: html
editor: visual
---

```{r}
install.packages("labelled")
library(tidyverse)
library(here)
library(rio)
library(knitr)
library(labelled)

df<- import(here("Data/36498-6002-Data.rda"))%>% 
  select(R06_YC9050, R06_YC1124, R06_YC9022, R06_YC1022, R06R_Y_AGECAT2,R06R_Y_SEX, R06R_Y_HISP, R06R_Y_RACECAT3, R06R_Y_PM0130) %>% 
  rename(harmful=R06_YC9050, 
         addict=R06_YC1124, 
         smoker=R06_YC9022, 
         num_cigs=R06_YC1022,
         age=R06R_Y_AGECAT2,
         sex=R06R_Y_SEX, 
         hisp=R06R_Y_HISP, 
         race=R06R_Y_RACECAT3, 
         ses=R06R_Y_PM0130)
  
  # mutate(harmful= as.numeric(harmful), addict=as.numeric(addict), age=as.numeric(age)) #COMMENTED OUT BECAUSE THESE AREN'T CONTINUOUS ANYWAY, NOT SURE IF NEED THEM AS NUMERIC 

# df %>% 
#   ggplot(aes(x=addict, fill=harmful))+
#   geom_bar()

# df %>% 
  # ggplot(aes(x=num_cigs, fill=smoker))+
  # geom_bar()
#MADE THESE JUST TO DOUBLE CHECK THAT THE VARIABLES LOOK RIGHT 
```

```{r}

# | label: cleaning

# Didn't think the data needed pivoting
# Cleaned factor labels
# Made a subset of only those who answered affirmatively or negatively whether they identify as a smoker

levels(df$harmful) <- c("1","2","3","4","5")

df <- df %>% 
  mutate(harmful = factor(harmful,
                          levels = c("1","2","3","4","5"),
                          labels = c("Not at all harmful",
                                     "Slightly harmful",
                                     "Somewhat harmful",
                                     "Very harmful",
                                     "Extremely harmful")))

levels(df$addict) <- c("1","2","3","4","5")

df <- df %>% 
  mutate(addict = factor(addict,
                          levels = c("1","2","3","4","5"),
                          labels = c("Very unlikely",
                                     "Somewhat unlikely",
                                     "Neither likely nor unlikely",
                                     "Somewhat likely",
                                     "Very likely")))

levels(df$smoker) <- c("1","2")

df <- df %>% 
  mutate(smoker = factor(smoker, levels = c("1","2"),
                         labels = c("Yes","No")))

levels(df$age) <- c("1","2")

df <- df %>% 
  mutate(age = factor(age, levels = c("1","2"),
                         labels = c("12-14","15-17")))

levels(df$sex) <- c("1","2")

df <- df %>% 
  mutate(sex = factor(sex, levels = c("1","2"),
                         labels = c("Male","Female")))

levels(df$hisp) <- c("1","2")

df <- df %>% 
  mutate(hisp = factor(hisp, levels = c("1","2"),
                         labels = c("Hispanic","Not Hispanic")))

levels(df$race) <- c("1","2","3")

df <- df %>% 
  mutate(race = factor(race, levels = c("1","2","3"),
                         labels = c("White alone","Black alone","Other")))

levels(df$ses) <- c("1","2","3","4","5")

df <- df %>% 
  mutate(ses = factor(ses,
                          levels = c("1","2","3","4","5"),
                          labels = c("Less than $10,000",
                                     "$10,000 to $24,999",
                                     "$25,000 to $49,999",
                                     "$50,000 to $99,999",
                                     "$100,000 or more")))

df_smokers <- df %>% 
  filter(smoker != "NA")
```

```{r}

#| label: tables

#I think it would be helpful if you used gt() or kable() instead of tibble because then you can control the aesthetics of it and you can more easily use it for your final presentation and project!

#demographics 
demographic_table <- df %>% 
  summarise(
    total = n(),
    Male = sum(sex == "Male", na.rm = TRUE),
    Female = sum(sex == "Female", na.rm = TRUE),
    Age_12_14 = sum(age == "12-14", na.rm = TRUE),
    Age_15_17 = sum(age == "15-17", na.rm = TRUE),
    Hispanic = sum(hisp == "Hispanic", na.rm = TRUE),
    Not_Hispanic = sum(hisp == "Not Hispanic", na.rm = TRUE),
    White = sum(race == "White alone", na.rm = TRUE),
    Black = sum(race == "Black alone", na.rm = TRUE),
    Other = sum(race == "Other", na.rm = TRUE)) %>% 
  pivot_longer(cols = -total, names_to = "Demographic", values_to = "Count") %>% 
  mutate(Percentage = (Count / total) * 100)
demographic_table

smoker_demographic_table <- df_smokers %>% 
  summarise(
    total = n(),
    Male = sum(sex == "Male", na.rm = TRUE),
    Female = sum(sex == "Female", na.rm = TRUE),
    Age_12_14 = sum(age == "12-14", na.rm = TRUE),
    Age_15_17 = sum(age == "15-17", na.rm = TRUE),
    Hispanic = sum(hisp == "Hispanic", na.rm = TRUE),
    Not_Hispanic = sum(hisp == "Not Hispanic", na.rm = TRUE),
    White = sum(race == "White alone", na.rm = TRUE),
    Black = sum(race == "Black alone", na.rm = TRUE),
    Other = sum(race == "Other", na.rm = TRUE)) %>% 
  pivot_longer(cols = -total, names_to = "Demographic", values_to = "Count") %>% 
  mutate(Percentage = (Count / total) * 100)
smoker_demographic_table

#prob table for perception 
table_harmful <- df %>% 
  group_by(harmful) %>% 
  summarise(count = n()) %>% 
  mutate(prop = count / sum(count)) 
table_harmful

table_harmful_smokers <- df_smokers %>% 
  group_by(harmful) %>% 
  summarise(count = n()) %>% 
  mutate(prop = count / sum(count)) 
table_harmful_smokers


#prob table for perception by age
table_harmful_by_age <- df %>% 
  group_by(age, harmful) %>% 
  summarise(count = n(), .groups = "drop") %>% 
  mutate(prop = count / sum(count))
table_harmful_by_age

table_harmful_by_age_smokers <- df_smokers %>% 
  group_by(age, harmful) %>% 
  summarise(count = n(), .groups = "drop") %>% 
  mutate(prop = count / sum(count))
table_harmful_by_age_smokers

#smoker status by age
#not sure about this one, doesn't change if I use df_smokers / remove filter line of code
table_smoker_age <- df %>% 
  filter(!is.na(smoker)) %>% 
  count(smoker, age) %>% 
  pivot_wider(names_from = age, values_from = n, values_fill = 0)
table_smoker_age

## I think this table is correct. There are 370 obs in the smoker filter, which is not everyone who identified as a smoker but rather those who answered the question, yes OR no. The smoker demographic table is the demographics of everyone who answered; this table shows what the actual distribution of those answers was
```

```{r}
#| label: visuals

df_smokers %>% 
  ggplot(aes(x=num_cigs)) +
  geom_histogram(binwidth = 1) +
  theme_minimal()

df_smokers %>% 
  group_by(smoker) %>% 
  summarise(mean_cigs = round(mean(num_cigs, na.rm = T),2)) %>% 
  ggplot(aes(x=smoker,y=mean_cigs,fill=smoker)) +
  geom_col() +
  theme_minimal()+
  theme(text = element_text(size = 24))+
  labs(x="Identifies as Smoker", y="Number of Cigarettes Smoked in Past 30 Days", fill="Smoker")
#remember to add a title!


#bar graphs
df %>% 
  ggplot(aes(x=harmful, fill=harmful))+
  geom_bar()+
  theme_minimal()+
  labs(x= "Belief of Cigarette Harmfulness", y="Count", fill="Belief")+
  theme(text = element_text(size = 26))
#This is a great plot! For this one and the one below, it could be good to rotate the x axis labels 45 degrees to improve readability

df %>% 
  ggplot(aes(x=addict, fill=addict))+
  geom_bar()+
  theme_minimal()+
  labs(x= "Likeliness of Someone Becoming Addicted to Cigarettes", y="Count", fill="Belief")+
  theme(text = element_text(size = 20))
```

```{r}
#| label: regression models

# harmful as predictor of smoker status

library(modelsummary)

m1 <- glm(smoker~harmful+age+sex+race+ses,
          data = df_smokers,
          family = binomial(link = "logit"))

#I know this isn't totally necessary for this class, but it might be worth doing a correlation matrix of these variables before adding them all to one model

modelsummary(m1, fmt = 2,
             exponentiate = TRUE,
             statistic = "conf.int",
             stars = TRUE,
             coef_omit = "(Intercept)",
             gof_omit = "AIC|BIC|Log.Lik|RMSE")

summary(m1)

# no significant predictors; perceived harmfulness of cigs is not associated (pos or neg) w smoker status

# addict as predictor of smoker status

m2 <- glm(smoker~addict+age+sex+race+ses,
          data = df_smokers,
          family = binomial(link = "logit"))

modelsummary(m2, fmt = 2,
             exponentiate = TRUE,
             statistic = "conf.int",
             stars = TRUE,
             coef_omit = "(Intercept)",
             gof_omit = "AIC|BIC|Log.Lik|RMSE")

summary(m2)

# same, no significant predictors...beliefs about likelihood of addiction are not associated w smoker status

# harmful as predictor of num. cigs

m3 <- lm(num_cigs~harmful+age+sex+race+ses,
   data=df_smokers,
   na.action = na.omit)

modelsummary(m3,stars = T, fmt = 2,
             gof_omit = "Adj.|AIC|BIC|RMSE|Log")

summary(m3)

# one significant predictor, ON AVG IN THE POPULATION ppl in SES 25-49.999k smoked 8.37 more cigs

# las model, addict as predictor of num. cigs

m4 <- lm(num_cigs~addict+age+sex+race+ses,
   data=df_smokers,
   na.action = na.omit)

modelsummary(m4,stars = T, fmt = 2,
             gof_omit = "Adj.|AIC|BIC|RMSE|Log")

summary(m4)

# intercept (which is "very unlikely to get addicted") had a p < .1; again, ses 25-49.999k was significantly associated w smoking 8.5 more cigs

# modelsummary() creates tables; summary() reports p-values. If someone wants, we can maybe make a vector of coefficients and p-values...or, I wonder whether we could save summary() results as a df...though we'd need to exponentiate m1 and m2 coefficients for log. odds

# just for funzies

m5 <- lm(num_cigs~smoker+age+sex+race+ses,
   data=df_smokers,
   na.action = na.omit)

summary(m5)

# After adjusting for age, sex, race, and SES, on average in the pop., identifying as a non-smoker is significantly (p < .001) associated with consuming 12.5 fewer cigarettes per [unit of time]
```

```{r}

#|label: new-boot-goofing

library(forcats)

df_smokers_dichotomous <- df_smokers %>% 
  mutate(harmful = fct_collapse(harmful,
                                `Not harmful` = c("Not at all harmful",
                                                  "Slightly harmful"),
                                `Somewhat harmful` = "Somewhat harmful",
                                `Harmful`= c("Very harmful",
                                             "Extremely harmful")),
         addict = fct_collapse(addict,
                               `Not likely` = c("Very unlikely",
                                                "Somewhat unlikely"),
                               `Neither likely nor unlikely` = "Neither likely nor unlikely",
                               `Likely` = c("Somewhat likely",
                                            "Very likely")))

m6 <- glm(smoker~harmful+age+sex+race+ses,
          data = df_smokers_dichotomous,
          family = binomial(link = "logit"))

modelsummary(m6, fmt = 2,
             exponentiate = TRUE,
             statistic = "conf.int",
             stars = TRUE,
             coef_omit = "(Intercept)",
             gof_omit = "AIC|BIC|Log.Lik|RMSE")

m7 <- glm(smoker~addict+age+sex+race+ses,
          data = df_smokers_dichotomous,
          family = binomial(link = "logit"))

modelsummary(m7, fmt = 2,
             exponentiate = TRUE,
             statistic = "conf.int",
             stars = TRUE,
             coef_omit = "(Intercept)",
             gof_omit = "AIC|BIC|Log.Lik|RMSE")

m8 <- lm(num_cigs~harmful+age+sex+race+ses,
   data=df_smokers_dichotomous,
   na.action = na.omit)

modelsummary(m8,stars = T, fmt = 2,
             gof_omit = "Adj.|AIC|BIC|RMSE|Log")

m9 <- lm(num_cigs~addict+age+sex+race+ses,
   data=df_smokers_dichotomous,
   na.action = na.omit)

modelsummary(m9,stars = T, fmt = 2,
             gof_omit = "Adj.|AIC|BIC|RMSE|Log")

m10 <- lm(num_cigs~smoker+age+sex+race+ses,
   data=df_smokers_dichotomous,
   na.action = na.omit)

summary(m10)
```
